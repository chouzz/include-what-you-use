name: CI

on:
  - push
  - pull_request

defaults:
  run:
    shell: bash

jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-18.04
    steps:

    # Install Dependencies
    - name: Ubuntu dependencies
      if: startsWith(matrix.os,'ubuntu')
      run: |
          # llvm
          sudo add-apt-repository "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main"
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo apt-get install -y clang
          sudo apt-get install -y llvm-dev
          sudo apt-get install -y libclang-dev
          # ninja
          sudo apt-get install -y ninja-build
    - name: Find installed version
      run: echo ::set-env name=INSTALL_VERSION::$( ls -t /usr/lib/ | grep '^llvm-' | head -n 1 | sed -E 's/llvm-(.+)/\1/')

    # LLVM Path
    - name: Absolute paths to LLVM's root and bin directory
      run: |
        echo ::set-env name=PREFIX_PATH::$( llvm-config-$INSTALL_VERSION --prefix )
        echo ::set-env name=BIN_PATH::$( llvm-config-$INSTALL_VERSION --bindir )
    - name: Checkout master branch
      uses: actions/checkout@v2

    # Build dir
    - name: Create build directory
      run: mkdir build

    # Build
    - name: Build IWYU
      working-directory: ./build
      run: |
        cmake -GNinja -DCMAKE_PREFIX_PATH=$PREFIX_PATH -DCMAKE_C_COMPILER=$BIN_PATH/clang -DCMAKE_CXX_COMPILER=$BIN_PATH/clang++ -DCMAKE_INSTALL_PREFIX=./ ../
        ninja
    - name: Upload the build directory
      uses: actions/upload-artifact@v2
      with:
        name: build_master
        path: ./build

    - name: Test IWYU
      working-directory: ./build
      run: CTEST_OUTPUT_ON_FAILURE=1 ninja test

    - name: Test install
      working-directory: ./build
      run: ninja install

    - name: Check license headers
      run: git ls-tree --full-tree --name-only -r HEAD | xargs ./iwyu-check-license-header.py

  Skip:
    if: "contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
      - name: Skip CI ðŸš«
        run: echo skip CI